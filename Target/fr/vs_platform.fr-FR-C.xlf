<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file original="src/vs/platform/request/common/request" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="httpConfigurationTitle">
        <source xml:lang="en">HTTP</source>
        <target xml:lang="french" state="needs-translation">HTTP</target>
      </trans-unit>
      <trans-unit id="proxy">
        <source xml:lang="en">The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.</source>
        <target xml:lang="french" state="needs-translation">The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.</target>
      </trans-unit>
      <trans-unit id="strictSSL">
        <source xml:lang="en">Controls whether the proxy server certificate should be verified against the list of supplied CAs.</source>
        <target xml:lang="french" state="needs-translation">Controls whether the proxy server certificate should be verified against the list of supplied CAs.</target>
      </trans-unit>
      <trans-unit id="proxyAuthorization">
        <source xml:lang="en">The value to send as the `Proxy-Authorization` header for every network request.</source>
        <target xml:lang="french" state="needs-translation">The value to send as the `Proxy-Authorization` header for every network request.</target>
      </trans-unit>
      <trans-unit id="proxySupportOff">
        <source xml:lang="en">Disable proxy support for extensions.</source>
        <target xml:lang="french" state="needs-translation">Disable proxy support for extensions.</target>
      </trans-unit>
      <trans-unit id="proxySupportOn">
        <source xml:lang="en">Enable proxy support for extensions.</source>
        <target xml:lang="french" state="needs-translation">Enable proxy support for extensions.</target>
      </trans-unit>
      <trans-unit id="proxySupportOverride">
        <source xml:lang="en">Enable proxy support for extensions, override request options.</source>
        <target xml:lang="french" state="needs-translation">Enable proxy support for extensions, override request options.</target>
      </trans-unit>
      <trans-unit id="proxySupport">
        <source xml:lang="en">Use the proxy support for extensions.</source>
        <target xml:lang="french" state="needs-translation">Use the proxy support for extensions.</target>
      </trans-unit>
      <trans-unit id="systemCertificates">
        <source xml:lang="en">Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)</source>
        <target xml:lang="french" state="needs-translation">Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/environment/node/argvHelper" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="unknownOption">
        <source xml:lang="en">Option '{0}' is unknown. Ignoring.</source>
        <target xml:lang="french" state="needs-translation">Option '{0}' is unknown. Ignoring.</target>
      </trans-unit>
      <trans-unit id="multipleValues">
        <source xml:lang="en">Option '{0}' is defined more than once. Using value '{1}.'</source>
        <target xml:lang="french" state="needs-translation">Option '{0}' is defined more than once. Using value '{1}.'</target>
      </trans-unit>
      <trans-unit id="gotoValidation">
        <source xml:lang="en">Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.</source>
        <target xml:lang="french" state="needs-translation">Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/update/common/update.config.contribution" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="updateConfigurationTitle">
        <source xml:lang="en">Update</source>
        <target xml:lang="french" state="needs-translation">Update</target>
      </trans-unit>
      <trans-unit id="updateMode">
        <source xml:lang="en">Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.</source>
        <target xml:lang="french" state="needs-translation">Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.</target>
      </trans-unit>
      <trans-unit id="none">
        <source xml:lang="en">Disable updates.</source>
        <target xml:lang="french" state="needs-translation">Disable updates.</target>
      </trans-unit>
      <trans-unit id="manual">
        <source xml:lang="en">Disable automatic background update checks. Updates will be available if you manually check for updates.</source>
        <target xml:lang="french" state="needs-translation">Disable automatic background update checks. Updates will be available if you manually check for updates.</target>
      </trans-unit>
      <trans-unit id="start">
        <source xml:lang="en">Check for updates only on startup. Disable automatic background update checks.</source>
        <target xml:lang="french" state="needs-translation">Check for updates only on startup. Disable automatic background update checks.</target>
      </trans-unit>
      <trans-unit id="default">
        <source xml:lang="en">Enable automatic update checks. Code will check for updates automatically and periodically.</source>
        <target xml:lang="french" state="needs-translation">Enable automatic update checks. Code will check for updates automatically and periodically.</target>
      </trans-unit>
      <trans-unit id="deprecated_Duplicated1">
        <source xml:lang="en">This setting is deprecated, please use '{0}' instead.</source>
        <target xml:lang="french" state="needs-translation">This setting is deprecated, please use '{0}' instead.</target>
      </trans-unit>
      <trans-unit id="enableWindowsBackgroundUpdatesTitle">
        <source xml:lang="en">Enable Background Updates on Windows</source>
        <target xml:lang="french" state="needs-translation">Enable Background Updates on Windows</target>
      </trans-unit>
      <trans-unit id="enableWindowsBackgroundUpdates">
        <source xml:lang="en">Enable to download and install new VS Code Versions in the background on Windows</source>
        <target xml:lang="french" state="needs-translation">Enable to download and install new VS Code Versions in the background on Windows</target>
      </trans-unit>
      <trans-unit id="showReleaseNotes">
        <source xml:lang="en">Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.</source>
        <target xml:lang="french" state="needs-translation">Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/telemetry/common/telemetryService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="telemetryConfigurationTitle">
        <source xml:lang="en">Telemetry</source>
        <target xml:lang="french" state="needs-translation">Telemetry</target>
      </trans-unit>
      <trans-unit id="telemetry.enableTelemetry">
        <source xml:lang="en">Enable usage data and errors to be sent to a Microsoft online service.</source>
        <target xml:lang="french" state="needs-translation">Enable usage data and errors to be sent to a Microsoft online service.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/extensionManagement/common/extensionManagement" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="extensions">
        <source xml:lang="en">Extensions</source>
        <target xml:lang="french" state="needs-translation">Extensions</target>
      </trans-unit>
      <trans-unit id="preferences">
        <source xml:lang="en">Preferences</source>
        <target xml:lang="french" state="needs-translation">Preferences</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/extensionManagement/node/extensionManagementUtil" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="invalidManifest_Duplicated4">
        <source xml:lang="en">VSIX invalid: package.json is not a JSON file.</source>
        <target xml:lang="french" state="needs-translation">VSIX invalid: package.json is not a JSON file.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/userDataSync/common/userDataSync" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="sync">
        <source xml:lang="en">Sync</source>
        <target xml:lang="french" state="needs-translation">Sync</target>
      </trans-unit>
      <trans-unit id="sync.enable">
        <source xml:lang="en">Enable synchronization.</source>
        <target xml:lang="french" state="needs-translation">Enable synchronization.</target>
      </trans-unit>
      <trans-unit id="sync.enableSettings">
        <source xml:lang="en">Enable synchronizing settings.</source>
        <target xml:lang="french" state="needs-translation">Enable synchronizing settings.</target>
      </trans-unit>
      <trans-unit id="sync.enableKeybindings">
        <source xml:lang="en">Enable synchronizing keybindings.</source>
        <target xml:lang="french" state="needs-translation">Enable synchronizing keybindings.</target>
      </trans-unit>
      <trans-unit id="sync.enableUIState">
        <source xml:lang="en">Enable synchronizing UI state (Only Display Language).</source>
        <target xml:lang="french" state="needs-translation">Enable synchronizing UI state (Only Display Language).</target>
      </trans-unit>
      <trans-unit id="sync.enableExtensions">
        <source xml:lang="en">Enable synchronizing extensions.</source>
        <target xml:lang="french" state="needs-translation">Enable synchronizing extensions.</target>
      </trans-unit>
      <trans-unit id="sync.keybindingsPerPlatform">
        <source xml:lang="en">Synchronize keybindings per platform.</source>
        <target xml:lang="french" state="needs-translation">Synchronize keybindings per platform.</target>
      </trans-unit>
      <trans-unit id="sync.ignoredExtensions">
        <source xml:lang="en">Configure extensions to be ignored while synchronizing.</source>
        <target xml:lang="french" state="needs-translation">Configure extensions to be ignored while synchronizing.</target>
      </trans-unit>
      <trans-unit id="sync.ignoredSettings">
        <source xml:lang="en">Configure settings to be ignored while synchronizing. 
Default Ignored Settings:

{0}</source>
        <target xml:lang="french" state="needs-translation">Configure settings to be ignored while synchronizing. 
Default Ignored Settings:

{0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/files/electron-browser/diskFileSystemProvider" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="binFailed">
        <source xml:lang="en">Failed to move '{0}' to the recycle bin</source>
        <target xml:lang="french" state="needs-translation">Failed to move '{0}' to the recycle bin</target>
      </trans-unit>
      <trans-unit id="trashFailed">
        <source xml:lang="en">Failed to move '{0}' to the trash</source>
        <target xml:lang="french" state="needs-translation">Failed to move '{0}' to the trash</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/environment/node/argv" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="optionsUpperCase">
        <source xml:lang="en">Options</source>
        <target xml:lang="french" state="needs-translation">Options</target>
      </trans-unit>
      <trans-unit id="extensionsManagement">
        <source xml:lang="en">Extensions Management</source>
        <target xml:lang="french" state="needs-translation">Extensions Management</target>
      </trans-unit>
      <trans-unit id="troubleshooting">
        <source xml:lang="en">Troubleshooting</source>
        <target xml:lang="french" state="needs-translation">Troubleshooting</target>
      </trans-unit>
      <trans-unit id="diff">
        <source xml:lang="en">Compare two files with each other.</source>
        <target xml:lang="french" state="needs-translation">Compare two files with each other.</target>
      </trans-unit>
      <trans-unit id="add">
        <source xml:lang="en">Add folder(s) to the last active window.</source>
        <target xml:lang="french" state="needs-translation">Add folder(s) to the last active window.</target>
      </trans-unit>
      <trans-unit id="goto">
        <source xml:lang="en">Open a file at the path on the specified line and character position.</source>
        <target xml:lang="french" state="needs-translation">Open a file at the path on the specified line and character position.</target>
      </trans-unit>
      <trans-unit id="newWindow_Duplicated6">
        <source xml:lang="en">Force to open a new window.</source>
        <target xml:lang="french" state="needs-translation">Force to open a new window.</target>
      </trans-unit>
      <trans-unit id="reuseWindow">
        <source xml:lang="en">Force to open a file or folder in an already opened window.</source>
        <target xml:lang="french" state="needs-translation">Force to open a file or folder in an already opened window.</target>
      </trans-unit>
      <trans-unit id="wait">
        <source xml:lang="en">Wait for the files to be closed before returning.</source>
        <target xml:lang="french" state="needs-translation">Wait for the files to be closed before returning.</target>
      </trans-unit>
      <trans-unit id="locale">
        <source xml:lang="en">The locale to use (e.g. en-US or zh-TW).</source>
        <target xml:lang="french" state="needs-translation">The locale to use (e.g. en-US or zh-TW).</target>
      </trans-unit>
      <trans-unit id="userDataDir">
        <source xml:lang="en">Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.</source>
        <target xml:lang="french" state="needs-translation">Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.</target>
      </trans-unit>
      <trans-unit id="version">
        <source xml:lang="en">Print version.</source>
        <target xml:lang="french" state="needs-translation">Print version.</target>
      </trans-unit>
      <trans-unit id="help">
        <source xml:lang="en">Print usage.</source>
        <target xml:lang="french" state="needs-translation">Print usage.</target>
      </trans-unit>
      <trans-unit id="telemetry">
        <source xml:lang="en">Shows all telemetry events which VS code collects.</source>
        <target xml:lang="french" state="needs-translation">Shows all telemetry events which VS code collects.</target>
      </trans-unit>
      <trans-unit id="folderUri">
        <source xml:lang="en">Opens a window with given folder uri(s)</source>
        <target xml:lang="french" state="needs-translation">Opens a window with given folder uri(s)</target>
      </trans-unit>
      <trans-unit id="fileUri">
        <source xml:lang="en">Opens a window with given file uri(s)</source>
        <target xml:lang="french" state="needs-translation">Opens a window with given file uri(s)</target>
      </trans-unit>
      <trans-unit id="extensionHomePath">
        <source xml:lang="en">Set the root path for extensions.</source>
        <target xml:lang="french" state="needs-translation">Set the root path for extensions.</target>
      </trans-unit>
      <trans-unit id="listExtensions">
        <source xml:lang="en">List the installed extensions.</source>
        <target xml:lang="french" state="needs-translation">List the installed extensions.</target>
      </trans-unit>
      <trans-unit id="showVersions">
        <source xml:lang="en">Show versions of installed extensions, when using --list-extension.</source>
        <target xml:lang="french" state="needs-translation">Show versions of installed extensions, when using --list-extension.</target>
      </trans-unit>
      <trans-unit id="category">
        <source xml:lang="en">Filters installed extensions by provided category, when using --list-extension.</source>
        <target xml:lang="french" state="needs-translation">Filters installed extensions by provided category, when using --list-extension.</target>
      </trans-unit>
      <trans-unit id="installExtension">
        <source xml:lang="en">Installs or updates the extension. Use `--force` argument to avoid prompts.</source>
        <target xml:lang="french" state="needs-translation">Installs or updates the extension. Use `--force` argument to avoid prompts.</target>
      </trans-unit>
      <trans-unit id="uninstallExtension">
        <source xml:lang="en">Uninstalls an extension.</source>
        <target xml:lang="french" state="needs-translation">Uninstalls an extension.</target>
      </trans-unit>
      <trans-unit id="experimentalApis">
        <source xml:lang="en">Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.</source>
        <target xml:lang="french" state="needs-translation">Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.</target>
      </trans-unit>
      <trans-unit id="verbose">
        <source xml:lang="en">Print verbose output (implies --wait).</source>
        <target xml:lang="french" state="needs-translation">Print verbose output (implies --wait).</target>
      </trans-unit>
      <trans-unit id="log">
        <source xml:lang="en">Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.</source>
        <target xml:lang="french" state="needs-translation">Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.</target>
      </trans-unit>
      <trans-unit id="status">
        <source xml:lang="en">Print process usage and diagnostics information.</source>
        <target xml:lang="french" state="needs-translation">Print process usage and diagnostics information.</target>
      </trans-unit>
      <trans-unit id="prof-startup">
        <source xml:lang="en">Run CPU profiler during startup</source>
        <target xml:lang="french" state="needs-translation">Run CPU profiler during startup</target>
      </trans-unit>
      <trans-unit id="disableExtensions">
        <source xml:lang="en">Disable all installed extensions.</source>
        <target xml:lang="french" state="needs-translation">Disable all installed extensions.</target>
      </trans-unit>
      <trans-unit id="disableExtension">
        <source xml:lang="en">Disable an extension.</source>
        <target xml:lang="french" state="needs-translation">Disable an extension.</target>
      </trans-unit>
      <trans-unit id="inspect-extensions">
        <source xml:lang="en">Allow debugging and profiling of extensions. Check the developer tools for the connection URI.</source>
        <target xml:lang="french" state="needs-translation">Allow debugging and profiling of extensions. Check the developer tools for the connection URI.</target>
      </trans-unit>
      <trans-unit id="inspect-brk-extensions">
        <source xml:lang="en">Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.</source>
        <target xml:lang="french" state="needs-translation">Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.</target>
      </trans-unit>
      <trans-unit id="disableGPU">
        <source xml:lang="en">Disable GPU hardware acceleration.</source>
        <target xml:lang="french" state="needs-translation">Disable GPU hardware acceleration.</target>
      </trans-unit>
      <trans-unit id="maxMemory">
        <source xml:lang="en">Max memory size for a window (in Mbytes).</source>
        <target xml:lang="french" state="needs-translation">Max memory size for a window (in Mbytes).</target>
      </trans-unit>
      <trans-unit id="usage">
        <source xml:lang="en">Usage</source>
        <target xml:lang="french" state="needs-translation">Usage</target>
      </trans-unit>
      <trans-unit id="options">
        <source xml:lang="en">options</source>
        <target xml:lang="french" state="needs-translation">options</target>
      </trans-unit>
      <trans-unit id="paths">
        <source xml:lang="en">paths</source>
        <target xml:lang="french" state="needs-translation">paths</target>
      </trans-unit>
      <trans-unit id="stdinWindows">
        <source xml:lang="en">To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')</source>
        <target xml:lang="french" state="needs-translation">To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')</target>
      </trans-unit>
      <trans-unit id="stdinUnix">
        <source xml:lang="en">To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')</source>
        <target xml:lang="french" state="needs-translation">To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')</target>
      </trans-unit>
      <trans-unit id="unknownVersion">
        <source xml:lang="en">Unknown version</source>
        <target xml:lang="french" state="needs-translation">Unknown version</target>
      </trans-unit>
      <trans-unit id="unknownCommit">
        <source xml:lang="en">Unknown commit</source>
        <target xml:lang="french" state="needs-translation">Unknown commit</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/label/common/label" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="untitledWorkspace">
        <source xml:lang="en">Untitled (Workspace)</source>
        <target xml:lang="french" state="needs-translation">Untitled (Workspace)</target>
      </trans-unit>
      <trans-unit id="workspaceName">
        <source xml:lang="en">{0} (Workspace)</source>
        <target xml:lang="french" state="needs-translation">{0} (Workspace)</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/files/common/files" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="unknownError">
        <source xml:lang="en">Unknown Error</source>
        <target xml:lang="french" state="needs-translation">Unknown Error</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/markers/common/markers" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="sev.error">
        <source xml:lang="en">Error</source>
        <target xml:lang="french" state="needs-translation">Error</target>
      </trans-unit>
      <trans-unit id="sev.warning">
        <source xml:lang="en">Warning</source>
        <target xml:lang="french" state="needs-translation">Warning</target>
      </trans-unit>
      <trans-unit id="sev.info">
        <source xml:lang="en">Info</source>
        <target xml:lang="french" state="needs-translation">Info</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/dialogs/common/dialogs" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="moreFile">
        <source xml:lang="en">...1 additional file not shown</source>
        <target xml:lang="french" state="needs-translation">...1 additional file not shown</target>
      </trans-unit>
      <trans-unit id="moreFiles">
        <source xml:lang="en">...{0} additional files not shown</source>
        <target xml:lang="french" state="needs-translation">...{0} additional files not shown</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/workspaces/common/workspaces" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="codeWorkspace">
        <source xml:lang="en">Code Workspace</source>
        <target xml:lang="french" state="needs-translation">Code Workspace</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/files/node/diskFileSystemProvider" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="fileExists_Duplicated8">
        <source xml:lang="en">File already exists</source>
        <target xml:lang="french" state="needs-translation">File already exists</target>
      </trans-unit>
      <trans-unit id="fileNotExists">
        <source xml:lang="en">File does not exist</source>
        <target xml:lang="french" state="needs-translation">File does not exist</target>
      </trans-unit>
      <trans-unit id="moveError">
        <source xml:lang="en">Unable to move '{0}' into '{1}' ({2}).</source>
        <target xml:lang="french" state="needs-translation">Unable to move '{0}' into '{1}' ({2}).</target>
      </trans-unit>
      <trans-unit id="copyError">
        <source xml:lang="en">Unable to copy '{0}' into '{1}' ({2}).</source>
        <target xml:lang="french" state="needs-translation">Unable to copy '{0}' into '{1}' ({2}).</target>
      </trans-unit>
      <trans-unit id="fileCopyErrorPathCase">
        <source xml:lang="en">'File cannot be copied to same path with different path case</source>
        <target xml:lang="french" state="needs-translation">'File cannot be copied to same path with different path case</target>
      </trans-unit>
      <trans-unit id="fileCopyErrorExists">
        <source xml:lang="en">File at target already exists</source>
        <target xml:lang="french" state="needs-translation">File at target already exists</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/userDataSync/common/settingsSync" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="errorInvalidSettings">
        <source xml:lang="en">Unable to sync settings. Please resolve conflicts without any errors/warnings and try again.</source>
        <target xml:lang="french" state="needs-translation">Unable to sync settings. Please resolve conflicts without any errors/warnings and try again.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/configuration/common/configurationRegistry" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="defaultConfigurations.title">
        <source xml:lang="en">Default Configuration Overrides</source>
        <target xml:lang="french" state="needs-translation">Default Configuration Overrides</target>
      </trans-unit>
      <trans-unit id="overrideSettings.description">
        <source xml:lang="en">Configure editor settings to be overridden for {0} language.</source>
        <target xml:lang="french" state="needs-translation">Configure editor settings to be overridden for {0} language.</target>
      </trans-unit>
      <trans-unit id="overrideSettings.defaultDescription">
        <source xml:lang="en">Configure editor settings to be overridden for a language.</source>
        <target xml:lang="french" state="needs-translation">Configure editor settings to be overridden for a language.</target>
      </trans-unit>
      <trans-unit id="config.property.languageDefault">
        <source xml:lang="en">Cannot register '{0}'. This matches property pattern '\\[.*\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.</source>
        <target xml:lang="french" state="needs-translation">Cannot register '{0}'. This matches property pattern '\\[.*\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.</target>
      </trans-unit>
      <trans-unit id="config.property.duplicate">
        <source xml:lang="en">Cannot register '{0}'. This property is already registered.</source>
        <target xml:lang="french" state="needs-translation">Cannot register '{0}'. This property is already registered.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/extensionManagement/node/extensionManagementService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="invalidManifest_Duplicated5">
        <source xml:lang="en">Extension invalid: package.json is not a JSON file.</source>
        <target xml:lang="french" state="needs-translation">Extension invalid: package.json is not a JSON file.</target>
      </trans-unit>
      <trans-unit id="incompatible">
        <source xml:lang="en">Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.</source>
        <target xml:lang="french" state="needs-translation">Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.</target>
      </trans-unit>
      <trans-unit id="restartCode">
        <source xml:lang="en">Please restart VS Code before reinstalling {0}.</source>
        <target xml:lang="french" state="needs-translation">Please restart VS Code before reinstalling {0}.</target>
      </trans-unit>
      <trans-unit id="MarketPlaceDisabled">
        <source xml:lang="en">Marketplace is not enabled</source>
        <target xml:lang="french" state="needs-translation">Marketplace is not enabled</target>
      </trans-unit>
      <trans-unit id="malicious extension">
        <source xml:lang="en">Can't install extension since it was reported to be problematic.</source>
        <target xml:lang="french" state="needs-translation">Can't install extension since it was reported to be problematic.</target>
      </trans-unit>
      <trans-unit id="notFoundCompatibleDependency">
        <source xml:lang="en">Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).</source>
        <target xml:lang="french" state="needs-translation">Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).</target>
      </trans-unit>
      <trans-unit id="removeError">
        <source xml:lang="en">Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.</source>
        <target xml:lang="french" state="needs-translation">Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.</target>
      </trans-unit>
      <trans-unit id="Not a Marketplace extension">
        <source xml:lang="en">Only Marketplace Extensions can be reinstalled</source>
        <target xml:lang="french" state="needs-translation">Only Marketplace Extensions can be reinstalled</target>
      </trans-unit>
      <trans-unit id="quitCode">
        <source xml:lang="en">Unable to install the extension. Please Quit and Start VS Code before reinstalling.</source>
        <target xml:lang="french" state="needs-translation">Unable to install the extension. Please Quit and Start VS Code before reinstalling.</target>
      </trans-unit>
      <trans-unit id="exitCode">
        <source xml:lang="en">Unable to install the extension. Please Exit and Start VS Code before reinstalling.</source>
        <target xml:lang="french" state="needs-translation">Unable to install the extension. Please Exit and Start VS Code before reinstalling.</target>
      </trans-unit>
      <trans-unit id="errorDeleting">
        <source xml:lang="en">Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again</source>
        <target xml:lang="french" state="needs-translation">Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again</target>
      </trans-unit>
      <trans-unit id="cannot read">
        <source xml:lang="en">Cannot read the extension from {0}</source>
        <target xml:lang="french" state="needs-translation">Cannot read the extension from {0}</target>
      </trans-unit>
      <trans-unit id="renameError">
        <source xml:lang="en">Unknown error while renaming {0} to {1}</source>
        <target xml:lang="french" state="needs-translation">Unknown error while renaming {0} to {1}</target>
      </trans-unit>
      <trans-unit id="notInstalled">
        <source xml:lang="en">Extension '{0}' is not installed.</source>
        <target xml:lang="french" state="needs-translation">Extension '{0}' is not installed.</target>
      </trans-unit>
      <trans-unit id="singleDependentError">
        <source xml:lang="en">Cannot uninstall extension '{0}'. Extension '{1}' depends on this.</source>
        <target xml:lang="french" state="needs-translation">Cannot uninstall extension '{0}'. Extension '{1}' depends on this.</target>
      </trans-unit>
      <trans-unit id="twoDependentsError">
        <source xml:lang="en">Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.</source>
        <target xml:lang="french" state="needs-translation">Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.</target>
      </trans-unit>
      <trans-unit id="multipleDependentsError">
        <source xml:lang="en">Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.</source>
        <target xml:lang="french" state="needs-translation">Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.</target>
      </trans-unit>
      <trans-unit id="notExists">
        <source xml:lang="en">Could not find extension</source>
        <target xml:lang="french" state="needs-translation">Could not find extension</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/list/browser/listService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="workbenchConfigurationTitle">
        <source xml:lang="en">Workbench</source>
        <target xml:lang="french" state="needs-translation">Workbench</target>
      </trans-unit>
      <trans-unit id="multiSelectModifier.ctrlCmd">
        <source xml:lang="en">Maps to `Control` on Windows and Linux and to `Command` on macOS.</source>
        <target xml:lang="french" state="needs-translation">Maps to `Control` on Windows and Linux and to `Command` on macOS.</target>
      </trans-unit>
      <trans-unit id="multiSelectModifier.alt">
        <source xml:lang="en">Maps to `Alt` on Windows and Linux and to `Option` on macOS.</source>
        <target xml:lang="french" state="needs-translation">Maps to `Alt` on Windows and Linux and to `Option` on macOS.</target>
      </trans-unit>
      <trans-unit id="multiSelectModifier">
        <source xml:lang="en">The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.</source>
        <note>- `ctrlCmd` refers to a value the setting can take and should not be localized.
- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.</note>
        <target xml:lang="french" state="needs-translation">The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.</target>
      </trans-unit>
      <trans-unit id="openModeModifier">
        <source xml:lang="en">Controls how to open items in trees and lists using the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. </source>
        <note>`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.</note>
        <target xml:lang="french" state="needs-translation">Controls how to open items in trees and lists using the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. </target>
      </trans-unit>
      <trans-unit id="horizontalScrolling setting">
        <source xml:lang="en">Controls whether lists and trees support horizontal scrolling in the workbench.</source>
        <target xml:lang="french" state="needs-translation">Controls whether lists and trees support horizontal scrolling in the workbench.</target>
      </trans-unit>
      <trans-unit id="tree horizontalScrolling setting">
        <source xml:lang="en">Controls whether trees support horizontal scrolling in the workbench.</source>
        <target xml:lang="french" state="needs-translation">Controls whether trees support horizontal scrolling in the workbench.</target>
      </trans-unit>
      <trans-unit id="deprecated_Duplicated2">
        <source xml:lang="en">This setting is deprecated, please use '{0}' instead.</source>
        <target xml:lang="french" state="needs-translation">This setting is deprecated, please use '{0}' instead.</target>
      </trans-unit>
      <trans-unit id="tree indent setting">
        <source xml:lang="en">Controls tree indentation in pixels.</source>
        <target xml:lang="french" state="needs-translation">Controls tree indentation in pixels.</target>
      </trans-unit>
      <trans-unit id="render tree indent guides">
        <source xml:lang="en">Controls whether the tree should render indent guides.</source>
        <target xml:lang="french" state="needs-translation">Controls whether the tree should render indent guides.</target>
      </trans-unit>
      <trans-unit id="keyboardNavigationSettingKey.simple">
        <source xml:lang="en">Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.</source>
        <target xml:lang="french" state="needs-translation">Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.</target>
      </trans-unit>
      <trans-unit id="keyboardNavigationSettingKey.highlight">
        <source xml:lang="en">Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.</source>
        <target xml:lang="french" state="needs-translation">Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.</target>
      </trans-unit>
      <trans-unit id="keyboardNavigationSettingKey.filter">
        <source xml:lang="en">Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.</source>
        <target xml:lang="french" state="needs-translation">Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.</target>
      </trans-unit>
      <trans-unit id="keyboardNavigationSettingKey">
        <source xml:lang="en">Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.</source>
        <target xml:lang="french" state="needs-translation">Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.</target>
      </trans-unit>
      <trans-unit id="automatic keyboard navigation setting">
        <source xml:lang="en">Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.</source>
        <target xml:lang="french" state="needs-translation">Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/files/common/fileService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="invalidPath">
        <source xml:lang="en">Unable to resolve filesystem provider with relative file path '{0}'</source>
        <target xml:lang="french" state="needs-translation">Unable to resolve filesystem provider with relative file path '{0}'</target>
      </trans-unit>
      <trans-unit id="noProviderFound">
        <source xml:lang="en">No file system provider found for resource '{0}'</source>
        <target xml:lang="french" state="needs-translation">No file system provider found for resource '{0}'</target>
      </trans-unit>
      <trans-unit id="fileNotFoundError">
        <source xml:lang="en">Unable to resolve non-existing file '{0}'</source>
        <target xml:lang="french" state="needs-translation">Unable to resolve non-existing file '{0}'</target>
      </trans-unit>
      <trans-unit id="fileExists_Duplicated9">
        <source xml:lang="en">Unable to create file '{0}' that already exists when overwrite flag is not set</source>
        <target xml:lang="french" state="needs-translation">Unable to create file '{0}' that already exists when overwrite flag is not set</target>
      </trans-unit>
      <trans-unit id="err.write">
        <source xml:lang="en">Unable to write file '{0}' ({1})</source>
        <target xml:lang="french" state="needs-translation">Unable to write file '{0}' ({1})</target>
      </trans-unit>
      <trans-unit id="fileIsDirectoryWriteError">
        <source xml:lang="en">Unable to write file '{0}' that is actually a directory</source>
        <target xml:lang="french" state="needs-translation">Unable to write file '{0}' that is actually a directory</target>
      </trans-unit>
      <trans-unit id="fileModifiedError">
        <source xml:lang="en">File Modified Since</source>
        <target xml:lang="french" state="needs-translation">File Modified Since</target>
      </trans-unit>
      <trans-unit id="err.read">
        <source xml:lang="en">Unable to read file '{0}' ({1})</source>
        <target xml:lang="french" state="needs-translation">Unable to read file '{0}' ({1})</target>
      </trans-unit>
      <trans-unit id="fileIsDirectoryReadError">
        <source xml:lang="en">Unable to read file '{0}' that is actually a directory</source>
        <target xml:lang="french" state="needs-translation">Unable to read file '{0}' that is actually a directory</target>
      </trans-unit>
      <trans-unit id="fileNotModifiedError">
        <source xml:lang="en">File not modified since</source>
        <target xml:lang="french" state="needs-translation">File not modified since</target>
      </trans-unit>
      <trans-unit id="fileTooLargeError_Duplicated10">
        <source xml:lang="en">Unable to read file '{0}' that is too large to open</source>
        <target xml:lang="french" state="needs-translation">Unable to read file '{0}' that is too large to open</target>
      </trans-unit>
      <trans-unit id="unableToMoveCopyError1">
        <source xml:lang="en">Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system</source>
        <target xml:lang="french" state="needs-translation">Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system</target>
      </trans-unit>
      <trans-unit id="unableToMoveCopyError2">
        <source xml:lang="en">Unable to move/copy when source '{0}' is parent of target '{1}'.</source>
        <target xml:lang="french" state="needs-translation">Unable to move/copy when source '{0}' is parent of target '{1}'.</target>
      </trans-unit>
      <trans-unit id="unableToMoveCopyError3">
        <source xml:lang="en">Unable to move/copy '{0}' because target '{1}' already exists at destination.</source>
        <target xml:lang="french" state="needs-translation">Unable to move/copy '{0}' because target '{1}' already exists at destination.</target>
      </trans-unit>
      <trans-unit id="unableToMoveCopyError4">
        <source xml:lang="en">Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.</source>
        <target xml:lang="french" state="needs-translation">Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.</target>
      </trans-unit>
      <trans-unit id="mkdirExistsError">
        <source xml:lang="en">Unable to create folder '{0}' that already exists but is not a directory</source>
        <target xml:lang="french" state="needs-translation">Unable to create folder '{0}' that already exists but is not a directory</target>
      </trans-unit>
      <trans-unit id="deleteFailedTrashUnsupported">
        <source xml:lang="en">Unable to delete file '{0}' via trash because provider does not support it.</source>
        <target xml:lang="french" state="needs-translation">Unable to delete file '{0}' via trash because provider does not support it.</target>
      </trans-unit>
      <trans-unit id="deleteFailedNotFound">
        <source xml:lang="en">Unable to delete non-existing file '{0}'</source>
        <target xml:lang="french" state="needs-translation">Unable to delete non-existing file '{0}'</target>
      </trans-unit>
      <trans-unit id="deleteFailedNonEmptyFolder">
        <source xml:lang="en">Unable to delete non-empty folder '{0}'.</source>
        <target xml:lang="french" state="needs-translation">Unable to delete non-empty folder '{0}'.</target>
      </trans-unit>
      <trans-unit id="err.readonly">
        <source xml:lang="en">Unable to modify readonly file '{0}'</source>
        <target xml:lang="french" state="needs-translation">Unable to modify readonly file '{0}'</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/files/common/io" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="fileTooLargeForHeapError">
        <source xml:lang="en">To open a file of this size, you need to restart and allow it to use more memory</source>
        <target xml:lang="french" state="needs-translation">To open a file of this size, you need to restart and allow it to use more memory</target>
      </trans-unit>
      <trans-unit id="fileTooLargeError_Duplicated11">
        <source xml:lang="en">File is too large to open</source>
        <target xml:lang="french" state="needs-translation">File is too large to open</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/theme/common/colorRegistry" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="foreground">
        <source xml:lang="en">Overall foreground color. This color is only used if not overridden by a component.</source>
        <target xml:lang="french" state="needs-translation">Overall foreground color. This color is only used if not overridden by a component.</target>
      </trans-unit>
      <trans-unit id="errorForeground">
        <source xml:lang="en">Overall foreground color for error messages. This color is only used if not overridden by a component.</source>
        <target xml:lang="french" state="needs-translation">Overall foreground color for error messages. This color is only used if not overridden by a component.</target>
      </trans-unit>
      <trans-unit id="descriptionForeground">
        <source xml:lang="en">Foreground color for description text providing additional information, for example for a label.</source>
        <target xml:lang="french" state="needs-translation">Foreground color for description text providing additional information, for example for a label.</target>
      </trans-unit>
      <trans-unit id="iconForeground">
        <source xml:lang="en">The default color for icons in the workbench.</source>
        <target xml:lang="french" state="needs-translation">The default color for icons in the workbench.</target>
      </trans-unit>
      <trans-unit id="focusBorder">
        <source xml:lang="en">Overall border color for focused elements. This color is only used if not overridden by a component.</source>
        <target xml:lang="french" state="needs-translation">Overall border color for focused elements. This color is only used if not overridden by a component.</target>
      </trans-unit>
      <trans-unit id="contrastBorder">
        <source xml:lang="en">An extra border around elements to separate them from others for greater contrast.</source>
        <target xml:lang="french" state="needs-translation">An extra border around elements to separate them from others for greater contrast.</target>
      </trans-unit>
      <trans-unit id="activeContrastBorder">
        <source xml:lang="en">An extra border around active elements to separate them from others for greater contrast.</source>
        <target xml:lang="french" state="needs-translation">An extra border around active elements to separate them from others for greater contrast.</target>
      </trans-unit>
      <trans-unit id="selectionBackground">
        <source xml:lang="en">The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.</source>
        <target xml:lang="french" state="needs-translation">The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.</target>
      </trans-unit>
      <trans-unit id="textSeparatorForeground">
        <source xml:lang="en">Color for text separators.</source>
        <target xml:lang="french" state="needs-translation">Color for text separators.</target>
      </trans-unit>
      <trans-unit id="textLinkForeground">
        <source xml:lang="en">Foreground color for links in text.</source>
        <target xml:lang="french" state="needs-translation">Foreground color for links in text.</target>
      </trans-unit>
      <trans-unit id="textLinkActiveForeground">
        <source xml:lang="en">Foreground color for links in text when clicked on and on mouse hover.</source>
        <target xml:lang="french" state="needs-translation">Foreground color for links in text when clicked on and on mouse hover.</target>
      </trans-unit>
      <trans-unit id="textPreformatForeground">
        <source xml:lang="en">Foreground color for preformatted text segments.</source>
        <target xml:lang="french" state="needs-translation">Foreground color for preformatted text segments.</target>
      </trans-unit>
      <trans-unit id="textBlockQuoteBackground">
        <source xml:lang="en">Background color for block quotes in text.</source>
        <target xml:lang="french" state="needs-translation">Background color for block quotes in text.</target>
      </trans-unit>
      <trans-unit id="textBlockQuoteBorder">
        <source xml:lang="en">Border color for block quotes in text.</source>
        <target xml:lang="french" state="needs-translation">Border color for block quotes in text.</target>
      </trans-unit>
      <trans-unit id="textCodeBlockBackground">
        <source xml:lang="en">Background color for code blocks in text.</source>
        <target xml:lang="french" state="needs-translation">Background color for code blocks in text.</target>
      </trans-unit>
      <trans-unit id="widgetShadow">
        <source xml:lang="en">Shadow color of widgets such as find/replace inside the editor.</source>
        <target xml:lang="french" state="needs-translation">Shadow color of widgets such as find/replace inside the editor.</target>
      </trans-unit>
      <trans-unit id="inputBoxBackground">
        <source xml:lang="en">Input box background.</source>
        <target xml:lang="french" state="needs-translation">Input box background.</target>
      </trans-unit>
      <trans-unit id="inputBoxForeground">
        <source xml:lang="en">Input box foreground.</source>
        <target xml:lang="french" state="needs-translation">Input box foreground.</target>
      </trans-unit>
      <trans-unit id="inputBoxBorder">
        <source xml:lang="en">Input box border.</source>
        <target xml:lang="french" state="needs-translation">Input box border.</target>
      </trans-unit>
      <trans-unit id="inputBoxActiveOptionBorder">
        <source xml:lang="en">Border color of activated options in input fields.</source>
        <target xml:lang="french" state="needs-translation">Border color of activated options in input fields.</target>
      </trans-unit>
      <trans-unit id="inputOption.activeBackground">
        <source xml:lang="en">Background color of activated options in input fields.</source>
        <target xml:lang="french" state="needs-translation">Background color of activated options in input fields.</target>
      </trans-unit>
      <trans-unit id="inputPlaceholderForeground">
        <source xml:lang="en">Input box foreground color for placeholder text.</source>
        <target xml:lang="french" state="needs-translation">Input box foreground color for placeholder text.</target>
      </trans-unit>
      <trans-unit id="inputValidationInfoBackground">
        <source xml:lang="en">Input validation background color for information severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation background color for information severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationInfoForeground">
        <source xml:lang="en">Input validation foreground color for information severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation foreground color for information severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationInfoBorder">
        <source xml:lang="en">Input validation border color for information severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation border color for information severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationWarningBackground">
        <source xml:lang="en">Input validation background color for warning severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation background color for warning severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationWarningForeground">
        <source xml:lang="en">Input validation foreground color for warning severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation foreground color for warning severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationWarningBorder">
        <source xml:lang="en">Input validation border color for warning severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation border color for warning severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationErrorBackground">
        <source xml:lang="en">Input validation background color for error severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation background color for error severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationErrorForeground">
        <source xml:lang="en">Input validation foreground color for error severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation foreground color for error severity.</target>
      </trans-unit>
      <trans-unit id="inputValidationErrorBorder">
        <source xml:lang="en">Input validation border color for error severity.</source>
        <target xml:lang="french" state="needs-translation">Input validation border color for error severity.</target>
      </trans-unit>
      <trans-unit id="dropdownBackground">
        <source xml:lang="en">Dropdown background.</source>
        <target xml:lang="french" state="needs-translation">Dropdown background.</target>
      </trans-unit>
      <trans-unit id="dropdownListBackground">
        <source xml:lang="en">Dropdown list background.</source>
        <target xml:lang="french" state="needs-translation">Dropdown list background.</target>
      </trans-unit>
      <trans-unit id="dropdownForeground">
        <source xml:lang="en">Dropdown foreground.</source>
        <target xml:lang="french" state="needs-translation">Dropdown foreground.</target>
      </trans-unit>
      <trans-unit id="dropdownBorder">
        <source xml:lang="en">Dropdown border.</source>
        <target xml:lang="french" state="needs-translation">Dropdown border.</target>
      </trans-unit>
      <trans-unit id="checkbox.background">
        <source xml:lang="en">Background color of checkbox widget.</source>
        <target xml:lang="french" state="needs-translation">Background color of checkbox widget.</target>
      </trans-unit>
      <trans-unit id="checkbox.foreground">
        <source xml:lang="en">Foreground color of checkbox widget.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of checkbox widget.</target>
      </trans-unit>
      <trans-unit id="checkbox.border">
        <source xml:lang="en">Border color of checkbox widget.</source>
        <target xml:lang="french" state="needs-translation">Border color of checkbox widget.</target>
      </trans-unit>
      <trans-unit id="pickerGroupForeground">
        <source xml:lang="en">Quick picker color for grouping labels.</source>
        <target xml:lang="french" state="needs-translation">Quick picker color for grouping labels.</target>
      </trans-unit>
      <trans-unit id="pickerGroupBorder">
        <source xml:lang="en">Quick picker color for grouping borders.</source>
        <target xml:lang="french" state="needs-translation">Quick picker color for grouping borders.</target>
      </trans-unit>
      <trans-unit id="buttonForeground">
        <source xml:lang="en">Button foreground color.</source>
        <target xml:lang="french" state="needs-translation">Button foreground color.</target>
      </trans-unit>
      <trans-unit id="buttonBackground">
        <source xml:lang="en">Button background color.</source>
        <target xml:lang="french" state="needs-translation">Button background color.</target>
      </trans-unit>
      <trans-unit id="buttonHoverBackground">
        <source xml:lang="en">Button background color when hovering.</source>
        <target xml:lang="french" state="needs-translation">Button background color when hovering.</target>
      </trans-unit>
      <trans-unit id="badgeBackground">
        <source xml:lang="en">Badge background color. Badges are small information labels, e.g. for search results count.</source>
        <target xml:lang="french" state="needs-translation">Badge background color. Badges are small information labels, e.g. for search results count.</target>
      </trans-unit>
      <trans-unit id="badgeForeground">
        <source xml:lang="en">Badge foreground color. Badges are small information labels, e.g. for search results count.</source>
        <target xml:lang="french" state="needs-translation">Badge foreground color. Badges are small information labels, e.g. for search results count.</target>
      </trans-unit>
      <trans-unit id="scrollbarShadow">
        <source xml:lang="en">Scrollbar shadow to indicate that the view is scrolled.</source>
        <target xml:lang="french" state="needs-translation">Scrollbar shadow to indicate that the view is scrolled.</target>
      </trans-unit>
      <trans-unit id="scrollbarSliderBackground">
        <source xml:lang="en">Scrollbar slider background color.</source>
        <target xml:lang="french" state="needs-translation">Scrollbar slider background color.</target>
      </trans-unit>
      <trans-unit id="scrollbarSliderHoverBackground">
        <source xml:lang="en">Scrollbar slider background color when hovering.</source>
        <target xml:lang="french" state="needs-translation">Scrollbar slider background color when hovering.</target>
      </trans-unit>
      <trans-unit id="scrollbarSliderActiveBackground">
        <source xml:lang="en">Scrollbar slider background color when clicked on.</source>
        <target xml:lang="french" state="needs-translation">Scrollbar slider background color when clicked on.</target>
      </trans-unit>
      <trans-unit id="progressBarBackground">
        <source xml:lang="en">Background color of the progress bar that can show for long running operations.</source>
        <target xml:lang="french" state="needs-translation">Background color of the progress bar that can show for long running operations.</target>
      </trans-unit>
      <trans-unit id="editorError.foreground">
        <source xml:lang="en">Foreground color of error squigglies in the editor.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of error squigglies in the editor.</target>
      </trans-unit>
      <trans-unit id="errorBorder">
        <source xml:lang="en">Border color of error boxes in the editor.</source>
        <target xml:lang="french" state="needs-translation">Border color of error boxes in the editor.</target>
      </trans-unit>
      <trans-unit id="editorWarning.foreground">
        <source xml:lang="en">Foreground color of warning squigglies in the editor.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of warning squigglies in the editor.</target>
      </trans-unit>
      <trans-unit id="warningBorder">
        <source xml:lang="en">Border color of warning boxes in the editor.</source>
        <target xml:lang="french" state="needs-translation">Border color of warning boxes in the editor.</target>
      </trans-unit>
      <trans-unit id="editorInfo.foreground">
        <source xml:lang="en">Foreground color of info squigglies in the editor.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of info squigglies in the editor.</target>
      </trans-unit>
      <trans-unit id="infoBorder">
        <source xml:lang="en">Border color of info boxes in the editor.</source>
        <target xml:lang="french" state="needs-translation">Border color of info boxes in the editor.</target>
      </trans-unit>
      <trans-unit id="editorHint.foreground">
        <source xml:lang="en">Foreground color of hint squigglies in the editor.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of hint squigglies in the editor.</target>
      </trans-unit>
      <trans-unit id="hintBorder">
        <source xml:lang="en">Border color of hint boxes in the editor.</source>
        <target xml:lang="french" state="needs-translation">Border color of hint boxes in the editor.</target>
      </trans-unit>
      <trans-unit id="editorBackground">
        <source xml:lang="en">Editor background color.</source>
        <target xml:lang="french" state="needs-translation">Editor background color.</target>
      </trans-unit>
      <trans-unit id="editorForeground">
        <source xml:lang="en">Editor default foreground color.</source>
        <target xml:lang="french" state="needs-translation">Editor default foreground color.</target>
      </trans-unit>
      <trans-unit id="editorWidgetBackground">
        <source xml:lang="en">Background color of editor widgets, such as find/replace.</source>
        <target xml:lang="french" state="needs-translation">Background color of editor widgets, such as find/replace.</target>
      </trans-unit>
      <trans-unit id="editorWidgetForeground">
        <source xml:lang="en">Foreground color of editor widgets, such as find/replace.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of editor widgets, such as find/replace.</target>
      </trans-unit>
      <trans-unit id="editorWidgetBorder">
        <source xml:lang="en">Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.</source>
        <target xml:lang="french" state="needs-translation">Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.</target>
      </trans-unit>
      <trans-unit id="editorWidgetResizeBorder">
        <source xml:lang="en">Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.</source>
        <target xml:lang="french" state="needs-translation">Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.</target>
      </trans-unit>
      <trans-unit id="editorSelectionBackground">
        <source xml:lang="en">Color of the editor selection.</source>
        <target xml:lang="french" state="needs-translation">Color of the editor selection.</target>
      </trans-unit>
      <trans-unit id="editorSelectionForeground">
        <source xml:lang="en">Color of the selected text for high contrast.</source>
        <target xml:lang="french" state="needs-translation">Color of the selected text for high contrast.</target>
      </trans-unit>
      <trans-unit id="editorInactiveSelection">
        <source xml:lang="en">Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="editorSelectionHighlight">
        <source xml:lang="en">Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="editorSelectionHighlightBorder">
        <source xml:lang="en">Border color for regions with the same content as the selection.</source>
        <target xml:lang="french" state="needs-translation">Border color for regions with the same content as the selection.</target>
      </trans-unit>
      <trans-unit id="editorFindMatch">
        <source xml:lang="en">Color of the current search match.</source>
        <target xml:lang="french" state="needs-translation">Color of the current search match.</target>
      </trans-unit>
      <trans-unit id="findMatchHighlight">
        <source xml:lang="en">Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="findRangeHighlight">
        <source xml:lang="en">Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="editorFindMatchBorder">
        <source xml:lang="en">Border color of the current search match.</source>
        <target xml:lang="french" state="needs-translation">Border color of the current search match.</target>
      </trans-unit>
      <trans-unit id="findMatchHighlightBorder">
        <source xml:lang="en">Border color of the other search matches.</source>
        <target xml:lang="french" state="needs-translation">Border color of the other search matches.</target>
      </trans-unit>
      <trans-unit id="findRangeHighlightBorder">
        <source xml:lang="en">Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="searchEditor.queryMatch">
        <source xml:lang="en">Color of the Search Editor query matches.</source>
        <target xml:lang="french" state="needs-translation">Color of the Search Editor query matches.</target>
      </trans-unit>
      <trans-unit id="searchEditor.editorFindMatchBorder">
        <source xml:lang="en">Border color of the Search Editor query matches.</source>
        <target xml:lang="french" state="needs-translation">Border color of the Search Editor query matches.</target>
      </trans-unit>
      <trans-unit id="hoverHighlight">
        <source xml:lang="en">Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="hoverBackground">
        <source xml:lang="en">Background color of the editor hover.</source>
        <target xml:lang="french" state="needs-translation">Background color of the editor hover.</target>
      </trans-unit>
      <trans-unit id="hoverForeground">
        <source xml:lang="en">Foreground color of the editor hover.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of the editor hover.</target>
      </trans-unit>
      <trans-unit id="hoverBorder">
        <source xml:lang="en">Border color of the editor hover.</source>
        <target xml:lang="french" state="needs-translation">Border color of the editor hover.</target>
      </trans-unit>
      <trans-unit id="statusBarBackground">
        <source xml:lang="en">Background color of the editor hover status bar.</source>
        <target xml:lang="french" state="needs-translation">Background color of the editor hover status bar.</target>
      </trans-unit>
      <trans-unit id="activeLinkForeground">
        <source xml:lang="en">Color of active links.</source>
        <target xml:lang="french" state="needs-translation">Color of active links.</target>
      </trans-unit>
      <trans-unit id="editorLightBulbForeground">
        <source xml:lang="en">The color used for the lightbulb actions icon.</source>
        <target xml:lang="french" state="needs-translation">The color used for the lightbulb actions icon.</target>
      </trans-unit>
      <trans-unit id="editorLightBulbAutoFixForeground">
        <source xml:lang="en">The color used for the lightbulb auto fix actions icon.</source>
        <target xml:lang="french" state="needs-translation">The color used for the lightbulb auto fix actions icon.</target>
      </trans-unit>
      <trans-unit id="diffEditorInserted">
        <source xml:lang="en">Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="diffEditorRemoved">
        <source xml:lang="en">Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="diffEditorInsertedOutline">
        <source xml:lang="en">Outline color for the text that got inserted.</source>
        <target xml:lang="french" state="needs-translation">Outline color for the text that got inserted.</target>
      </trans-unit>
      <trans-unit id="diffEditorRemovedOutline">
        <source xml:lang="en">Outline color for text that got removed.</source>
        <target xml:lang="french" state="needs-translation">Outline color for text that got removed.</target>
      </trans-unit>
      <trans-unit id="diffEditorBorder">
        <source xml:lang="en">Border color between the two text editors.</source>
        <target xml:lang="french" state="needs-translation">Border color between the two text editors.</target>
      </trans-unit>
      <trans-unit id="listFocusBackground">
        <source xml:lang="en">List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listFocusForeground">
        <source xml:lang="en">List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listActiveSelectionBackground">
        <source xml:lang="en">List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listActiveSelectionForeground">
        <source xml:lang="en">List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listInactiveSelectionBackground">
        <source xml:lang="en">List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listInactiveSelectionForeground">
        <source xml:lang="en">List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listInactiveFocusBackground">
        <source xml:lang="en">List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</source>
        <target xml:lang="french" state="needs-translation">List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.</target>
      </trans-unit>
      <trans-unit id="listHoverBackground">
        <source xml:lang="en">List/Tree background when hovering over items using the mouse.</source>
        <target xml:lang="french" state="needs-translation">List/Tree background when hovering over items using the mouse.</target>
      </trans-unit>
      <trans-unit id="listHoverForeground">
        <source xml:lang="en">List/Tree foreground when hovering over items using the mouse.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground when hovering over items using the mouse.</target>
      </trans-unit>
      <trans-unit id="listDropBackground">
        <source xml:lang="en">List/Tree drag and drop background when moving items around using the mouse.</source>
        <target xml:lang="french" state="needs-translation">List/Tree drag and drop background when moving items around using the mouse.</target>
      </trans-unit>
      <trans-unit id="highlight">
        <source xml:lang="en">List/Tree foreground color of the match highlights when searching inside the list/tree.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground color of the match highlights when searching inside the list/tree.</target>
      </trans-unit>
      <trans-unit id="invalidItemForeground">
        <source xml:lang="en">List/Tree foreground color for invalid items, for example an unresolved root in explorer.</source>
        <target xml:lang="french" state="needs-translation">List/Tree foreground color for invalid items, for example an unresolved root in explorer.</target>
      </trans-unit>
      <trans-unit id="listErrorForeground">
        <source xml:lang="en">Foreground color of list items containing errors.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of list items containing errors.</target>
      </trans-unit>
      <trans-unit id="listWarningForeground">
        <source xml:lang="en">Foreground color of list items containing warnings.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of list items containing warnings.</target>
      </trans-unit>
      <trans-unit id="listFilterWidgetBackground">
        <source xml:lang="en">Background color of the type filter widget in lists and trees.</source>
        <target xml:lang="french" state="needs-translation">Background color of the type filter widget in lists and trees.</target>
      </trans-unit>
      <trans-unit id="listFilterWidgetOutline">
        <source xml:lang="en">Outline color of the type filter widget in lists and trees.</source>
        <target xml:lang="french" state="needs-translation">Outline color of the type filter widget in lists and trees.</target>
      </trans-unit>
      <trans-unit id="listFilterWidgetNoMatchesOutline">
        <source xml:lang="en">Outline color of the type filter widget in lists and trees, when there are no matches.</source>
        <target xml:lang="french" state="needs-translation">Outline color of the type filter widget in lists and trees, when there are no matches.</target>
      </trans-unit>
      <trans-unit id="listFilterMatchHighlight">
        <source xml:lang="en">Background color of the filtered match.</source>
        <target xml:lang="french" state="needs-translation">Background color of the filtered match.</target>
      </trans-unit>
      <trans-unit id="listFilterMatchHighlightBorder">
        <source xml:lang="en">Border color of the filtered match.</source>
        <target xml:lang="french" state="needs-translation">Border color of the filtered match.</target>
      </trans-unit>
      <trans-unit id="treeIndentGuidesStroke">
        <source xml:lang="en">Tree stroke color for the indentation guides.</source>
        <target xml:lang="french" state="needs-translation">Tree stroke color for the indentation guides.</target>
      </trans-unit>
      <trans-unit id="menuBorder">
        <source xml:lang="en">Border color of menus.</source>
        <target xml:lang="french" state="needs-translation">Border color of menus.</target>
      </trans-unit>
      <trans-unit id="menuForeground">
        <source xml:lang="en">Foreground color of menu items.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of menu items.</target>
      </trans-unit>
      <trans-unit id="menuBackground">
        <source xml:lang="en">Background color of menu items.</source>
        <target xml:lang="french" state="needs-translation">Background color of menu items.</target>
      </trans-unit>
      <trans-unit id="menuSelectionForeground">
        <source xml:lang="en">Foreground color of the selected menu item in menus.</source>
        <target xml:lang="french" state="needs-translation">Foreground color of the selected menu item in menus.</target>
      </trans-unit>
      <trans-unit id="menuSelectionBackground">
        <source xml:lang="en">Background color of the selected menu item in menus.</source>
        <target xml:lang="french" state="needs-translation">Background color of the selected menu item in menus.</target>
      </trans-unit>
      <trans-unit id="menuSelectionBorder">
        <source xml:lang="en">Border color of the selected menu item in menus.</source>
        <target xml:lang="french" state="needs-translation">Border color of the selected menu item in menus.</target>
      </trans-unit>
      <trans-unit id="menuSeparatorBackground">
        <source xml:lang="en">Color of a separator menu item in menus.</source>
        <target xml:lang="french" state="needs-translation">Color of a separator menu item in menus.</target>
      </trans-unit>
      <trans-unit id="snippetTabstopHighlightBackground">
        <source xml:lang="en">Highlight background color of a snippet tabstop.</source>
        <target xml:lang="french" state="needs-translation">Highlight background color of a snippet tabstop.</target>
      </trans-unit>
      <trans-unit id="snippetTabstopHighlightBorder">
        <source xml:lang="en">Highlight border color of a snippet tabstop.</source>
        <target xml:lang="french" state="needs-translation">Highlight border color of a snippet tabstop.</target>
      </trans-unit>
      <trans-unit id="snippetFinalTabstopHighlightBackground">
        <source xml:lang="en">Highlight background color of the final tabstop of a snippet.</source>
        <target xml:lang="french" state="needs-translation">Highlight background color of the final tabstop of a snippet.</target>
      </trans-unit>
      <trans-unit id="snippetFinalTabstopHighlightBorder">
        <source xml:lang="en">Highlight border color of the final stabstop of a snippet.</source>
        <target xml:lang="french" state="needs-translation">Highlight border color of the final stabstop of a snippet.</target>
      </trans-unit>
      <trans-unit id="breadcrumbsFocusForeground">
        <source xml:lang="en">Color of focused breadcrumb items.</source>
        <target xml:lang="french" state="needs-translation">Color of focused breadcrumb items.</target>
      </trans-unit>
      <trans-unit id="breadcrumbsBackground">
        <source xml:lang="en">Background color of breadcrumb items.</source>
        <target xml:lang="french" state="needs-translation">Background color of breadcrumb items.</target>
      </trans-unit>
      <trans-unit id="breadcrumbsSelectedForegound">
        <source xml:lang="en">Color of selected breadcrumb items.</source>
        <target xml:lang="french" state="needs-translation">Color of selected breadcrumb items.</target>
      </trans-unit>
      <trans-unit id="breadcrumbsSelectedBackground">
        <source xml:lang="en">Background color of breadcrumb item picker.</source>
        <target xml:lang="french" state="needs-translation">Background color of breadcrumb item picker.</target>
      </trans-unit>
      <trans-unit id="mergeCurrentHeaderBackground">
        <source xml:lang="en">Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeCurrentContentBackground">
        <source xml:lang="en">Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeIncomingHeaderBackground">
        <source xml:lang="en">Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeIncomingContentBackground">
        <source xml:lang="en">Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeCommonHeaderBackground">
        <source xml:lang="en">Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeCommonContentBackground">
        <source xml:lang="en">Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="mergeBorder">
        <source xml:lang="en">Border color on headers and the splitter in inline merge-conflicts.</source>
        <target xml:lang="french" state="needs-translation">Border color on headers and the splitter in inline merge-conflicts.</target>
      </trans-unit>
      <trans-unit id="overviewRulerCurrentContentForeground">
        <source xml:lang="en">Current overview ruler foreground for inline merge-conflicts.</source>
        <target xml:lang="french" state="needs-translation">Current overview ruler foreground for inline merge-conflicts.</target>
      </trans-unit>
      <trans-unit id="overviewRulerIncomingContentForeground">
        <source xml:lang="en">Incoming overview ruler foreground for inline merge-conflicts.</source>
        <target xml:lang="french" state="needs-translation">Incoming overview ruler foreground for inline merge-conflicts.</target>
      </trans-unit>
      <trans-unit id="overviewRulerCommonContentForeground">
        <source xml:lang="en">Common ancestor overview ruler foreground for inline merge-conflicts.</source>
        <target xml:lang="french" state="needs-translation">Common ancestor overview ruler foreground for inline merge-conflicts.</target>
      </trans-unit>
      <trans-unit id="overviewRulerFindMatchForeground">
        <source xml:lang="en">Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="overviewRulerSelectionHighlightForeground">
        <source xml:lang="en">Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.</source>
        <target xml:lang="french" state="needs-translation">Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.</target>
      </trans-unit>
      <trans-unit id="minimapFindMatchHighlight">
        <source xml:lang="en">Minimap marker color for find matches.</source>
        <target xml:lang="french" state="needs-translation">Minimap marker color for find matches.</target>
      </trans-unit>
      <trans-unit id="minimapSelectionHighlight">
        <source xml:lang="en">Minimap marker color for the editor selection.</source>
        <target xml:lang="french" state="needs-translation">Minimap marker color for the editor selection.</target>
      </trans-unit>
      <trans-unit id="minimapError">
        <source xml:lang="en">Minimap marker color for errors.</source>
        <target xml:lang="french" state="needs-translation">Minimap marker color for errors.</target>
      </trans-unit>
      <trans-unit id="overviewRuleWarning">
        <source xml:lang="en">Minimap marker color for warnings.</source>
        <target xml:lang="french" state="needs-translation">Minimap marker color for warnings.</target>
      </trans-unit>
      <trans-unit id="problemsErrorIconForeground">
        <source xml:lang="en">The color used for the problems error icon.</source>
        <target xml:lang="french" state="needs-translation">The color used for the problems error icon.</target>
      </trans-unit>
      <trans-unit id="problemsWarningIconForeground">
        <source xml:lang="en">The color used for the problems warning icon.</source>
        <target xml:lang="french" state="needs-translation">The color used for the problems warning icon.</target>
      </trans-unit>
      <trans-unit id="problemsInfoIconForeground">
        <source xml:lang="en">The color used for the problems info icon.</source>
        <target xml:lang="french" state="needs-translation">The color used for the problems info icon.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/userDataSync/common/extensionsSync" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="skip extension">
        <source xml:lang="en">Skipping synchronising extension {0}</source>
        <target xml:lang="french" state="needs-translation">Skipping synchronising extension {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/dialogs/electron-main/dialogs" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="open">
        <source xml:lang="en">Open</source>
        <target xml:lang="french" state="needs-translation">Open</target>
      </trans-unit>
      <trans-unit id="openFolder">
        <source xml:lang="en">Open Folder</source>
        <target xml:lang="french" state="needs-translation">Open Folder</target>
      </trans-unit>
      <trans-unit id="openFile">
        <source xml:lang="en">Open File</source>
        <target xml:lang="french" state="needs-translation">Open File</target>
      </trans-unit>
      <trans-unit id="openWorkspaceTitle">
        <source xml:lang="en">Open Workspace</source>
        <target xml:lang="french" state="needs-translation">Open Workspace</target>
      </trans-unit>
      <trans-unit id="openWorkspace">
        <source xml:lang="en">&amp;&amp;Open</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Open</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/userDataSync/common/keybindingsSync" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="errorInvalidKeybindings">
        <source xml:lang="en">Unable to sync keybindings. Please resolve conflicts without any errors/warnings and try again.</source>
        <target xml:lang="french" state="needs-translation">Unable to sync keybindings. Please resolve conflicts without any errors/warnings and try again.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/extensions/common/extensionValidator" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="versionSyntax">
        <source xml:lang="en">Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.</source>
        <target xml:lang="french" state="needs-translation">Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.</target>
      </trans-unit>
      <trans-unit id="versionSpecificity1">
        <source xml:lang="en">Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.</source>
        <target xml:lang="french" state="needs-translation">Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.</target>
      </trans-unit>
      <trans-unit id="versionSpecificity2">
        <source xml:lang="en">Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.</source>
        <target xml:lang="french" state="needs-translation">Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.</target>
      </trans-unit>
      <trans-unit id="versionMismatch">
        <source xml:lang="en">Extension is not compatible with Code {0}. Extension requires: {1}.</source>
        <target xml:lang="french" state="needs-translation">Extension is not compatible with Code {0}. Extension requires: {1}.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/actions/browser/menuEntryActionViewItem" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="titleAndKb">
        <source xml:lang="en">{0} ({1})</source>
        <target xml:lang="french" state="needs-translation">{0} ({1})</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/workspaces/electron-main/workspacesMainService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="ok_Duplicated12">
        <source xml:lang="en">OK</source>
        <target xml:lang="french" state="needs-translation">OK</target>
      </trans-unit>
      <trans-unit id="workspaceOpenedMessage">
        <source xml:lang="en">Unable to save workspace '{0}'</source>
        <target xml:lang="french" state="needs-translation">Unable to save workspace '{0}'</target>
      </trans-unit>
      <trans-unit id="workspaceOpenedDetail">
        <source xml:lang="en">The workspace is already opened in another window. Please close that window first and then try again.</source>
        <target xml:lang="french" state="needs-translation">The workspace is already opened in another window. Please close that window first and then try again.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/workspaces/electron-main/workspacesHistoryMainService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="newWindow_Duplicated7">
        <source xml:lang="en">New Window</source>
        <target xml:lang="french" state="needs-translation">New Window</target>
      </trans-unit>
      <trans-unit id="newWindowDesc">
        <source xml:lang="en">Opens a new window</source>
        <target xml:lang="french" state="needs-translation">Opens a new window</target>
      </trans-unit>
      <trans-unit id="recentFolders">
        <source xml:lang="en">Recent Workspaces</source>
        <target xml:lang="french" state="needs-translation">Recent Workspaces</target>
      </trans-unit>
      <trans-unit id="folderDesc">
        <source xml:lang="en">{0} {1}</source>
        <target xml:lang="french" state="needs-translation">{0} {1}</target>
      </trans-unit>
      <trans-unit id="workspaceDesc">
        <source xml:lang="en">{0} {1}</source>
        <target xml:lang="french" state="needs-translation">{0} {1}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/issue/electron-main/issueMainService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="local">
        <source xml:lang="en">Local</source>
        <target xml:lang="french" state="needs-translation">Local</target>
      </trans-unit>
      <trans-unit id="issueReporterWriteToClipboard">
        <source xml:lang="en">There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.</source>
        <target xml:lang="french" state="needs-translation">There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.</target>
      </trans-unit>
      <trans-unit id="ok_Duplicated13">
        <source xml:lang="en">OK</source>
        <target xml:lang="french" state="needs-translation">OK</target>
      </trans-unit>
      <trans-unit id="cancel">
        <source xml:lang="en">Cancel</source>
        <target xml:lang="french" state="needs-translation">Cancel</target>
      </trans-unit>
      <trans-unit id="confirmCloseIssueReporter">
        <source xml:lang="en">Your input will not be saved. Are you sure you want to close this window?</source>
        <target xml:lang="french" state="needs-translation">Your input will not be saved. Are you sure you want to close this window?</target>
      </trans-unit>
      <trans-unit id="yes">
        <source xml:lang="en">Yes</source>
        <target xml:lang="french" state="needs-translation">Yes</target>
      </trans-unit>
      <trans-unit id="issueReporter">
        <source xml:lang="en">Issue Reporter</source>
        <target xml:lang="french" state="needs-translation">Issue Reporter</target>
      </trans-unit>
      <trans-unit id="processExplorer">
        <source xml:lang="en">Process Explorer</source>
        <target xml:lang="french" state="needs-translation">Process Explorer</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/keybinding/common/abstractKeybindingService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="first.chord">
        <source xml:lang="en">({0}) was pressed. Waiting for second key of chord...</source>
        <target xml:lang="french" state="needs-translation">({0}) was pressed. Waiting for second key of chord...</target>
      </trans-unit>
      <trans-unit id="missing.chord">
        <source xml:lang="en">The key combination ({0}, {1}) is not a command.</source>
        <target xml:lang="french" state="needs-translation">The key combination ({0}, {1}) is not a command.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/theme/common/tokenClassificationRegistry" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="schema.token.settings">
        <source xml:lang="en">Colors and styles for the token.</source>
        <target xml:lang="french" state="needs-translation">Colors and styles for the token.</target>
      </trans-unit>
      <trans-unit id="schema.token.foreground">
        <source xml:lang="en">Foreground color for the token.</source>
        <target xml:lang="french" state="needs-translation">Foreground color for the token.</target>
      </trans-unit>
      <trans-unit id="schema.token.background.warning">
        <source xml:lang="en">Token background colors are currently not supported.</source>
        <target xml:lang="french" state="needs-translation">Token background colors are currently not supported.</target>
      </trans-unit>
      <trans-unit id="schema.token.fontStyle">
        <source xml:lang="en">Font style of the rule: 'italic', 'bold' or 'underline' or a combination. The empty string unsets inherited settings.</source>
        <target xml:lang="french" state="needs-translation">Font style of the rule: 'italic', 'bold' or 'underline' or a combination. The empty string unsets inherited settings.</target>
      </trans-unit>
      <trans-unit id="schema.fontStyle.error">
        <source xml:lang="en">Font style must be 'italic', 'bold' or 'underline' or a combination. The empty string unsets all styles.</source>
        <target xml:lang="french" state="needs-translation">Font style must be 'italic', 'bold' or 'underline' or a combination. The empty string unsets all styles.</target>
      </trans-unit>
      <trans-unit id="schema.token.fontStyle.none">
        <source xml:lang="en">None (clear inherited style)</source>
        <target xml:lang="french" state="needs-translation">None (clear inherited style)</target>
      </trans-unit>
      <trans-unit id="comment">
        <source xml:lang="en">Style for comments.</source>
        <target xml:lang="french" state="needs-translation">Style for comments.</target>
      </trans-unit>
      <trans-unit id="string">
        <source xml:lang="en">Style for strings.</source>
        <target xml:lang="french" state="needs-translation">Style for strings.</target>
      </trans-unit>
      <trans-unit id="keyword">
        <source xml:lang="en">Style for keywords.</source>
        <target xml:lang="french" state="needs-translation">Style for keywords.</target>
      </trans-unit>
      <trans-unit id="number">
        <source xml:lang="en">Style for numbers.</source>
        <target xml:lang="french" state="needs-translation">Style for numbers.</target>
      </trans-unit>
      <trans-unit id="regexp">
        <source xml:lang="en">Style for expressions.</source>
        <target xml:lang="french" state="needs-translation">Style for expressions.</target>
      </trans-unit>
      <trans-unit id="operator">
        <source xml:lang="en">Style for operators.</source>
        <target xml:lang="french" state="needs-translation">Style for operators.</target>
      </trans-unit>
      <trans-unit id="namespace">
        <source xml:lang="en">Style for namespaces.</source>
        <target xml:lang="french" state="needs-translation">Style for namespaces.</target>
      </trans-unit>
      <trans-unit id="type">
        <source xml:lang="en">Style for types.</source>
        <target xml:lang="french" state="needs-translation">Style for types.</target>
      </trans-unit>
      <trans-unit id="struct">
        <source xml:lang="en">Style for structs.</source>
        <target xml:lang="french" state="needs-translation">Style for structs.</target>
      </trans-unit>
      <trans-unit id="class">
        <source xml:lang="en">Style for classes.</source>
        <target xml:lang="french" state="needs-translation">Style for classes.</target>
      </trans-unit>
      <trans-unit id="interface">
        <source xml:lang="en">Style for interfaces.</source>
        <target xml:lang="french" state="needs-translation">Style for interfaces.</target>
      </trans-unit>
      <trans-unit id="enum">
        <source xml:lang="en">Style for enums.</source>
        <target xml:lang="french" state="needs-translation">Style for enums.</target>
      </trans-unit>
      <trans-unit id="typeParameter">
        <source xml:lang="en">Style for type parameters.</source>
        <target xml:lang="french" state="needs-translation">Style for type parameters.</target>
      </trans-unit>
      <trans-unit id="function">
        <source xml:lang="en">Style for functions</source>
        <target xml:lang="french" state="needs-translation">Style for functions</target>
      </trans-unit>
      <trans-unit id="member">
        <source xml:lang="en">Style for member</source>
        <target xml:lang="french" state="needs-translation">Style for member</target>
      </trans-unit>
      <trans-unit id="macro">
        <source xml:lang="en">Style for macros.</source>
        <target xml:lang="french" state="needs-translation">Style for macros.</target>
      </trans-unit>
      <trans-unit id="variable">
        <source xml:lang="en">Style for variables.</source>
        <target xml:lang="french" state="needs-translation">Style for variables.</target>
      </trans-unit>
      <trans-unit id="constant">
        <source xml:lang="en">Style for constants.</source>
        <target xml:lang="french" state="needs-translation">Style for constants.</target>
      </trans-unit>
      <trans-unit id="parameter">
        <source xml:lang="en">Style for parameters.</source>
        <target xml:lang="french" state="needs-translation">Style for parameters.</target>
      </trans-unit>
      <trans-unit id="property">
        <source xml:lang="en">Style for properties.</source>
        <target xml:lang="french" state="needs-translation">Style for properties.</target>
      </trans-unit>
      <trans-unit id="labels">
        <source xml:lang="en">Style for labels. </source>
        <target xml:lang="french" state="needs-translation">Style for labels. </target>
      </trans-unit>
      <trans-unit id="declaration">
        <source xml:lang="en">Style for all symbol declarations.</source>
        <target xml:lang="french" state="needs-translation">Style for all symbol declarations.</target>
      </trans-unit>
      <trans-unit id="documentation">
        <source xml:lang="en">Style to use for references in documentation.</source>
        <target xml:lang="french" state="needs-translation">Style to use for references in documentation.</target>
      </trans-unit>
      <trans-unit id="static">
        <source xml:lang="en">Style to use for symbols that are static.</source>
        <target xml:lang="french" state="needs-translation">Style to use for symbols that are static.</target>
      </trans-unit>
      <trans-unit id="abstract">
        <source xml:lang="en">Style to use for symbols that are abstract.</source>
        <target xml:lang="french" state="needs-translation">Style to use for symbols that are abstract.</target>
      </trans-unit>
      <trans-unit id="deprecated_Duplicated3">
        <source xml:lang="en">Style to use for symbols that are deprecated.</source>
        <target xml:lang="french" state="needs-translation">Style to use for symbols that are deprecated.</target>
      </trans-unit>
      <trans-unit id="modification">
        <source xml:lang="en">Style to use for write accesses.</source>
        <target xml:lang="french" state="needs-translation">Style to use for write accesses.</target>
      </trans-unit>
      <trans-unit id="async">
        <source xml:lang="en">Style to use for symbols that are async.</source>
        <target xml:lang="french" state="needs-translation">Style to use for symbols that are async.</target>
      </trans-unit>
      <trans-unit id="readonly">
        <source xml:lang="en">Style to use for symbols that are readonly.</source>
        <target xml:lang="french" state="needs-translation">Style to use for symbols that are readonly.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/menubar/electron-main/menubar" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="miNewWindow">
        <source xml:lang="en">New &amp;&amp;Window</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">New &amp;&amp;Window</target>
      </trans-unit>
      <trans-unit id="mFile">
        <source xml:lang="en">&amp;&amp;File</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;File</target>
      </trans-unit>
      <trans-unit id="mEdit">
        <source xml:lang="en">&amp;&amp;Edit</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Edit</target>
      </trans-unit>
      <trans-unit id="mSelection">
        <source xml:lang="en">&amp;&amp;Selection</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Selection</target>
      </trans-unit>
      <trans-unit id="mView">
        <source xml:lang="en">&amp;&amp;View</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;View</target>
      </trans-unit>
      <trans-unit id="mGoto">
        <source xml:lang="en">&amp;&amp;Go</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Go</target>
      </trans-unit>
      <trans-unit id="mDebug">
        <source xml:lang="en">&amp;&amp;Debug</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Debug</target>
      </trans-unit>
      <trans-unit id="mTerminal">
        <source xml:lang="en">&amp;&amp;Terminal</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Terminal</target>
      </trans-unit>
      <trans-unit id="mWindow">
        <source xml:lang="en">Window</source>
        <target xml:lang="french" state="needs-translation">Window</target>
      </trans-unit>
      <trans-unit id="mHelp">
        <source xml:lang="en">&amp;&amp;Help</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Help</target>
      </trans-unit>
      <trans-unit id="mAbout">
        <source xml:lang="en">About {0}</source>
        <target xml:lang="french" state="needs-translation">About {0}</target>
      </trans-unit>
      <trans-unit id="miPreferences">
        <source xml:lang="en">&amp;&amp;Preferences</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">&amp;&amp;Preferences</target>
      </trans-unit>
      <trans-unit id="mServices">
        <source xml:lang="en">Services</source>
        <target xml:lang="french" state="needs-translation">Services</target>
      </trans-unit>
      <trans-unit id="mHide">
        <source xml:lang="en">Hide {0}</source>
        <target xml:lang="french" state="needs-translation">Hide {0}</target>
      </trans-unit>
      <trans-unit id="mHideOthers">
        <source xml:lang="en">Hide Others</source>
        <target xml:lang="french" state="needs-translation">Hide Others</target>
      </trans-unit>
      <trans-unit id="mShowAll">
        <source xml:lang="en">Show All</source>
        <target xml:lang="french" state="needs-translation">Show All</target>
      </trans-unit>
      <trans-unit id="miQuit">
        <source xml:lang="en">Quit {0}</source>
        <target xml:lang="french" state="needs-translation">Quit {0}</target>
      </trans-unit>
      <trans-unit id="mMinimize">
        <source xml:lang="en">Minimize</source>
        <target xml:lang="french" state="needs-translation">Minimize</target>
      </trans-unit>
      <trans-unit id="mZoom">
        <source xml:lang="en">Zoom</source>
        <target xml:lang="french" state="needs-translation">Zoom</target>
      </trans-unit>
      <trans-unit id="mBringToFront">
        <source xml:lang="en">Bring All to Front</source>
        <target xml:lang="french" state="needs-translation">Bring All to Front</target>
      </trans-unit>
      <trans-unit id="miSwitchWindow">
        <source xml:lang="en">Switch &amp;&amp;Window...</source>
        <note>&amp;&amp; denotes a mnemonic</note>
        <target xml:lang="french" state="needs-translation">Switch &amp;&amp;Window...</target>
      </trans-unit>
      <trans-unit id="mNewTab">
        <source xml:lang="en">New Tab</source>
        <target xml:lang="french" state="needs-translation">New Tab</target>
      </trans-unit>
      <trans-unit id="mShowPreviousTab">
        <source xml:lang="en">Show Previous Tab</source>
        <target xml:lang="french" state="needs-translation">Show Previous Tab</target>
      </trans-unit>
      <trans-unit id="mShowNextTab">
        <source xml:lang="en">Show Next Tab</source>
        <target xml:lang="french" state="needs-translation">Show Next Tab</target>
      </trans-unit>
      <trans-unit id="mMoveTabToNewWindow">
        <source xml:lang="en">Move Tab to New Window</source>
        <target xml:lang="french" state="needs-translation">Move Tab to New Window</target>
      </trans-unit>
      <trans-unit id="mMergeAllWindows">
        <source xml:lang="en">Merge All Windows</source>
        <target xml:lang="french" state="needs-translation">Merge All Windows</target>
      </trans-unit>
      <trans-unit id="miCheckForUpdates">
        <source xml:lang="en">Check for &amp;&amp;Updates...</source>
        <target xml:lang="french" state="needs-translation">Check for &amp;&amp;Updates...</target>
      </trans-unit>
      <trans-unit id="miCheckingForUpdates">
        <source xml:lang="en">Checking for Updates...</source>
        <target xml:lang="french" state="needs-translation">Checking for Updates...</target>
      </trans-unit>
      <trans-unit id="miDownloadUpdate">
        <source xml:lang="en">D&amp;&amp;ownload Available Update</source>
        <target xml:lang="french" state="needs-translation">D&amp;&amp;ownload Available Update</target>
      </trans-unit>
      <trans-unit id="miDownloadingUpdate">
        <source xml:lang="en">Downloading Update...</source>
        <target xml:lang="french" state="needs-translation">Downloading Update...</target>
      </trans-unit>
      <trans-unit id="miInstallUpdate">
        <source xml:lang="en">Install &amp;&amp;Update...</source>
        <target xml:lang="french" state="needs-translation">Install &amp;&amp;Update...</target>
      </trans-unit>
      <trans-unit id="miInstallingUpdate">
        <source xml:lang="en">Installing Update...</source>
        <target xml:lang="french" state="needs-translation">Installing Update...</target>
      </trans-unit>
      <trans-unit id="miRestartToUpdate">
        <source xml:lang="en">Restart to &amp;&amp;Update</source>
        <target xml:lang="french" state="needs-translation">Restart to &amp;&amp;Update</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/platform/windows/electron-main/windowsMainService" source-language="en" datatype="plaintext" target-language="french">
    <body>
      <trans-unit id="pathNotExistTitle">
        <source xml:lang="en">Path does not exist</source>
        <target xml:lang="french" state="needs-translation">Path does not exist</target>
      </trans-unit>
      <trans-unit id="pathNotExistDetail">
        <source xml:lang="en">The path '{0}' does not seem to exist anymore on disk.</source>
        <target xml:lang="french" state="needs-translation">The path '{0}' does not seem to exist anymore on disk.</target>
      </trans-unit>
      <trans-unit id="uriInvalidTitle">
        <source xml:lang="en">URI can not be opened</source>
        <target xml:lang="french" state="needs-translation">URI can not be opened</target>
      </trans-unit>
      <trans-unit id="uriInvalidDetail">
        <source xml:lang="en">The URI '{0}' is not valid and can not be opened.</source>
        <target xml:lang="french" state="needs-translation">The URI '{0}' is not valid and can not be opened.</target>
      </trans-unit>
      <trans-unit id="ok_Duplicated14">
        <source xml:lang="en">OK</source>
        <target xml:lang="french" state="needs-translation">OK</target>
      </trans-unit>
    </body>
  </file>
</xliff>
